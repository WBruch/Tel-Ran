/**
     * Дан список строк. Необходимо найти количество строк, которые содержат з
     * аданное подстроку.
     */
    private static void m1() {
        List<String> list = Arrays.asList("Java", "JavaScript", "Python", "Ruby");


 /**
     * Дан список целых чисел. Необходимо найти максимальный
     * элемент списка, который делится на заданное число без остатка.
     */
    private static void m2() {
        List<Integer> list = Arrays.asList(10, 15, 20, 25, 30);

  /**
      * Дана коллекция объектов класса Person. Класс Person содержит поля name и age.
      * Необходимо найти средний возраст людей, чьи имена начинаются на заданную букву.
      */
     private static void m3() {
         List<Person> people = Arrays.asList(
                 new Person("John", 20),
                 new Person("Jane", 25),
                 new Person("Jack", 30),
                 new Person("James", 35),
                 new Person("Jill", 40)
         );

  /**
       * Дана коллекция строк. Необходимо найти все уникальные слова, которые содержатся в
       * этой коллекции строк, и вернуть их в виде списка.
       */
      private static void m4() {
          List<String> lines = Arrays.asList(
                  "Java is a programming language.",
                  "Java is widely used in enterprise applications.",
                  "Python is gaining popularity as a data science tool.",
                  "Python is a versatile programming language."
          );

 /**   * подсчитать буквы в нижнем и верхнем регистре
            String ss = "KikJhYggfTgf";

 /**   * Определите все символьные строки максимальной длины в заданном конечном потоке символьных строк. через Optional
             Stream<String> stream = Stream.of("we", "wee", "qwer", "oooo");
             Optional<Map.Entry<Integer, List<String>>> max =

 /**
      * Дан список сотрудников, у каждого из которых есть поле "salary".
      * Необходимо найти среднюю зарплату сотрудников, работающих на должности "developer"
      * в компаниях, которые находятся в городах, начинающихся на букву "M".
      */

 ------------------------------------------------------------------------------------------------------------------------
 Для тех кому все легко
    /**
     * Задача 1.txt: Найти k-ую перестановку из n элементов
     * Дано число n и число k, необходимо найти k-ую перестановку из n элементов.
     */

  /**
      * Задача 2: Разбить список на подсписки заданного размера
      * Дан список элементов и размер подсписков. Необходимо разбить список
      * на подсписки указанного размера.
      */

Для людей-индиго
 Найти сумму квадратов простых чисел, которые являются палиндромами в заданном диапазоне.